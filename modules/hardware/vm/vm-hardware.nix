# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{lib, ...}: {
  flake.modules.nixos.vm = {modulesPath, ...}: {
    imports = [
      (modulesPath + "/profiles/qemu-guest.nix")
    ];
    boot = {
      initrd.availableKernelModules = ["ahci" "xhci_pci" "virtio_pci" "usb_storage" "sd_mod" "virtio_blk"];
      initrd.kernelModules = [];
      kernelModules = ["kvm-amd"];
      extraModulePackages = [];
    };
    fileSystems = {
      "/" = {
        device = "zroot/root";
        fsType = "zfs";
      };

      "/boot" = {
        device = "/dev/disk/by-uuid/F362-468E";
        fsType = "vfat";
        options = ["fmask=0022" "dmask=0022"];
      };

      "/nix" = {
        device = "zroot/nix";
        fsType = "zfs";
      };

      "/tmp" = {
        device = "zroot/tmp";
        fsType = "zfs";
      };

      "/cache" = {
        device = "zroot/cache";
        fsType = "zfs";
      };

      "/persist" = {
        device = "zroot/persist";
        fsType = "zfs";
      };
    };

    swapDevices = [
      {device = "/dev/disk/by-uuid/1241f2ae-b0ae-4019-a010-ca9be2c85ff0";}
    ];

    # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
    # (the default) this is the recommended approach. When using systemd-networkd it's
    # still possible to use this option, but it's recommended to use it in conjunction
    # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
    networking.useDHCP = lib.mkDefault true;
    # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;

    nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  };
}
